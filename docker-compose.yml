version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./output:/app/output
    env_file:
      - .env.local
    depends_on:
      - redis
    environment:
      - DEBUG=true
      - APP_ENV=development
      - DATABASE_URL=sqlite:///./aidocgen.db
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - ./output:/app/output
    env_file:
      - .env.local
    depends_on:
      - app
      - redis
    environment:
      - DEBUG=true
      - APP_ENV=development
      - DATABASE_URL=sqlite:///./aidocgen.db
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app-network
    command: celery -A src.tasks.worker worker --loglevel=info

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    env_file:
      - .env.local
    depends_on:
      - redis
      - celery-worker
    environment:
      - REDIS_URL=redis://redis:6379/0
    networks:
      - app-network
    command: celery -A src.tasks.worker flower --port=5555

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - app-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: